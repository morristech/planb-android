apply plugin: 'com.android.library'

def Properties localProps = rootProject.getSigningProperties()

android {
    publishNonDefault false
    defaultPublishConfig "release"
    testBuildType "release"

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        release {
            storeFile file(localProps.getProperty('RELEASE_KEYSTORE_PATH', 'fillhere'))
            storePassword localProps.getProperty('RELEASE_KEYSTORE_PW', '')
            keyAlias localProps.getProperty('RELEASE_KEY_ALIAS', '')
            keyPassword localProps.getProperty('RELEASE_KEY_PW', '')
        }
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionNameLib

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == com.android.builder.core.BuilderConstants.DEBUG) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    compile project(path: ':planb-core')
    compile "com.android.support:appcompat-v7:$rootProject.ext.dependencies.support"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.dependencies.support"

    testCompile "junit:junit:$rootProject.ext.dependencies.junit"

    androidTestCompile(group: 'com.android.support.test.espresso', name: 'espresso-core', version: rootProject.ext.dependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}



apply from: "$rootDir/gradle/publish.gradle"
